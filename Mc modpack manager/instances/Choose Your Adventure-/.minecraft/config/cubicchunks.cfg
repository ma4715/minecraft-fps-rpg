# Configuration file

general {
    # Chunk garbage collector update interval. Lower value will increase CPU usage, but can reduce memory usage.
    I:chunkGCInterval=200

    # The specified dimension ID ranges won't be created as cubic chunks world for new worlds, and worlds created before this option has been added, unless forceDimensionExcludes is set to true. IDs can be specified either as range in format min:max, or as single numbers.
    # Example:
    #     S:excludedDimensions <
    #         1
    #         10:100
    #         101:200
    #         -5
    #      >
    # The ranges specified can overlap, and the bounds can be specified in reversed order.
    S:excludedDimensions <
     >

    # Enabling this will force creating a cubic chunks world, even if it's not cubic chunks world type. This option is automatically set in world creation GUI when creating cubic chunks world with non-cubicchunks world type. This doesn't affect already created worlds.
    B:forceCubicChunks=true

    # If this is set to true, cubic chunks will respect excluded dimensions even for already existing worlds. If this results in a existing dimension switching between cubic chunks and vanilla, the contents of that dimension won't be converted.
    B:forceDimensionExcludes=True

    # The maximum number of cubic chunks to generate per tick.
    I:maxGeneratedCubesPerTick=512

    # Enabling this option allows using fast entity spawner instead of vanilla-alike. Fast entity spawner can reduce server lag. Entity respawn speed will be slightly slower (only one pack per tick) and amount of spawned mob will depend only from amount of players.
    B:useFastEntitySpawner=false

    # Enabling this option will force cubic chunks to use world generators designed for two dimensional chunks, which are often used for custom ore generators added by mods. To do so cubic chunks will pregenerate cubes in a range of height from 0 to 255. This is very likely to break a lot of mods, cause the game to hang, and make the world generation depend on the order in which things are generated. Use at your own risk.
    B:useVanillaChunkWorldGenerators=True

    # Similar to Minecraft's view distance, only for vertical chunks. Automatically adjusted by vertical view distance sloder on the client. Does not affect rendering, only what chunks are sent to client.
    I:verticalCubeLoadDistance=4
}


